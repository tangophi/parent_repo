name: Link Submodule PRs

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  link-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Extract branch name
        id: branch
        run: echo "branch_name=${GITHUB_HEAD_REF}" >> $GITHUB_OUTPUT

      - name: Link submodule PRs to PDR PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MY_PAT }}
          script: |
            const branch = "${{ steps.branch.outputs.branch_name }}";
            console.log(`Branch: ${branch}`);
            const pdrPR = context.payload.pull_request;
            console.log(`PDR PR: #${pdrPR.number}`);

            const submodules = ["sub1", "sub2"];
            let pdrBodyUpdate = "";

            for (const sub of submodules) {
              console.log(`Processing submodule: ${sub}`);
              const { data: prs } = await github.rest.pulls.list({
                owner: "tangophi",
                repo: sub,
                state: "open",
                head: `tangophi:${branch}`
              });
              console.log(`Found ${prs.length} PRs for ${sub}`);

              if (prs.length > 0) {
                const subPR = prs[0];
                console.log(`Found submodule PR: #${subPR.number}`);

                // Append link for the PDR body update
                const linkLine = `Linked Submodule PR: [${sub}#${subPR.number}](${subPR.html_url})`;
                pdrBodyUpdate += `\n${linkLine}`;

                // Update submodule PR body with link to PDR
                const pdrLinkLine = `Linked PDR PR: [${context.repo.repo}#${pdrPR.number}](${pdrPR.html_url})`;
                const newSubBody = (subPR.body || "") + "\n" + pdrLinkLine;
                console.log(`New submodule PR body: ${newSubBody}`);
                await github.rest.pulls.update({
                  owner: "tangophi",
                  repo: sub,
                  pull_number: subPR.number,
                  body: newSubBody
                });
              }
            }

            // After the loop, update the PDR body if there are any new links
            if (pdrBodyUpdate) {
              const newBody = (pdrPR.body || "") + pdrBodyUpdate;
              console.log(`Final PDR PR body: ${newBody}`);
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pdrPR.number,
                body: newBody
              });
            }