name: Link PDR and Submodule PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  link-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PDR PR
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install GitHub CLI and jq
        run: sudo apt-get update && sudo apt-get install -y gh jq

      - name: Link PRs both ways
        id: linkprs
        run: |
          set -e

          repo_pdr="${{ github.repository }}"
          pr_number="${{ github.event.pull_request.number }}"
          pdr_pr_url="https://github.com/$repo_pdr/pull/$pr_number"

          links=""
          prs_json="[]"

          for sub in sub1 sub2; do
            sha=$(git ls-tree HEAD "$sub" | awk '{print $3}')
            if [ -n "$sha" ]; then
              pr_num=$(gh pr list \
                --repo tangophi/$sub \
                --state open \
                --json number,headSha \
                --jq ".[] | select(.headSha==\"$sha\") | .number" \
                || true)
              if [ -n "$pr_num" ]; then
                pr_url="https://github.com/tangophi/$sub/pull/$pr_num"
                links="$links"$'\n'"Linked $sub PR: $pr_url"
                prs_json=$(echo "$prs_json" | jq --arg sub "$sub" --arg num "$pr_num" '. += [{"sub":$sub,"num":$num}]')
              fi
            fi
          done

          echo "links<<EOF" >> $GITHUB_OUTPUT
          echo "$links" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "prs_json=$prs_json" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Update PDR PR body with submodule PR links
        if: steps.linkprs.outputs.links != ''
        run: |
          current_body=$(gh pr view ${{ github.event.pull_request.number }} \
                          --repo ${{ github.repository }} \
                          --json body --jq '.body')
          new_links="${{ steps.linkprs.outputs.links }}"
          if [[ "$current_body" != *"$new_links"* ]]; then
            updated_body="$current_body"$'\n\n'"$new_links"
            gh pr edit ${{ github.event.pull_request.number }} \
                       --repo ${{ github.repository }} \
                       --body "$updated_body"
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Update submodule PRs with PDR PR link
        if: steps.linkprs.outputs.prs_json != '[]'
        run: |
          pdr_pr_url="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
          echo "Updating submodule PRs with link to: $pdr_pr_url"

          echo '${{ steps.linkprs.outputs.prs_json }}' | jq -c '.[]' | while read pr_info; do
            sub=$(echo "$pr_info" | jq -r '.sub')
            num=$(echo "$pr_info" | jq -r '.num')
            current_body=$(gh pr view "$num" \
                            --repo tangophi/$sub \
                            --json body --jq '.body')
            if [[ "$current_body" != *"$pdr_pr_url"* ]]; then
              updated_body="$current_body"$'\n\n'"Linked PDR PR: $pdr_pr_url"
              gh pr edit "$num" \
                         --repo tangophi/$sub \
                         --body "$updated_body"
              echo "Updated $sub PR #$num"
            else
              echo "$sub PR #$num already has link"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ github.token }}
