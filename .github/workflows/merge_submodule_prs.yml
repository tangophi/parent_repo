name: Merge Submodule PRs

on:
  pull_request:
    types: [closed]

jobs:
  extract-prs:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    outputs:
      sub1_prs: ${{ steps.extract.outputs.sub1_prs }}
      sub2_prs: ${{ steps.extract.outputs.sub2_prs }}
      branch: ${{ steps.extract.outputs.branch }}
    steps:
      - name: Extract PR numbers and branch
        id: extract
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
          OWNER: tangophi
        run: |
          echo "Extracting PR numbers from body:"
          echo "$PR_BODY"
          SUB1_PRS=$(echo "$PR_BODY" | grep -o "https://github.com/$OWNER/sub1/pull/[0-9]*" | awk -F'/' '{print $NF}' | jq -R . | jq -s -c .)
          SUB2_PRS=$(echo "$PR_BODY" | grep -o "https://github.com/$OWNER/sub2/pull/[0-9]*" | awk -F'/' '{print $NF}' | jq -R . | jq -s -c .)
          echo "::set-output name=sub1_prs::$SUB1_PRS"
          echo "::set-output name=sub2_prs::$SUB2_PRS"
          echo "::set-output name=branch::${{ github.event.pull_request.head.ref }}"

  merge-sub1-prs:
    needs: extract-prs
    if: needs.extract-prs.outputs.sub1_prs != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pr_number: ${{ fromJson(needs.extract-prs.outputs.sub1_prs) }}
    steps:
      - name: Merge sub1 PR #${{ matrix.pr_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
          OWNER: tangophi
        run: |
          echo "Merging sub1 PR #${{ matrix.pr_number }}"
          curl -X PUT \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$OWNER/sub1/pulls/${{ matrix.pr_number }}/merge"

  handle-sub2-prs:
    needs: extract-prs
    if: needs.extract-prs.outputs.sub2_prs != '[]'
    uses: ./.github/workflows/handle_sub2_patch.yml
    secrets:
      token: ${{ secrets.MY_PAT }}
    with:
      pr_number: ${{ matrix.pr_number }}
      branch_name: ${{ needs.extract-prs.outputs.branch }}
    strategy:
      matrix:
        pr_number: ${{ fromJson(needs.extract-prs.outputs.sub2_prs) }}

  update-parent-repo:
    needs: [merge-sub1-prs, handle-sub2-prs]
    if: always() && (needs.merge-sub1-prs.result == 'success' || needs.handle-sub2-prs.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout parent repository
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.MY_PAT }}
          submodules: 'recursive'
          submodule-fetch-depth: 0

      - name: Update submodules to latest commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "Updating sub1 to the latest on main..."
          (cd source/sub1 && git checkout main && git pull)

          echo "Updating sub2 to the latest on main..."
          (cd source/sub2 && git checkout main && git pull)

          # See if there are any changes to commit
          if git diff --quiet --exit-code; then
            echo "No submodule changes to commit."
            exit 0
          fi

          echo "Committing submodule updates..."
          git add source/sub1 source/sub2
          git commit -m "Update submodules to latest"
          git push origin main
